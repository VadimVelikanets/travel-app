{"ast":null,"code":"var _jsxFileName = \"D:\\\\\\u043A\\u0443\\u0440\\u0441\\u044B\\\\RS\\\\REACT\\\\TREVEL_APP\\\\travel-app\\\\src\\\\Components\\\\weatherWidget\\\\weatherWidget.js\",\n    _s = $RefreshSig$();\n\nimport { useEffect, useState } from \"react\";\nimport \"./weatherWidget.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst kelvinToCelsius = kelvin => {\n  const temp = Math.trunc(kelvin - 273.15);\n  return Math.abs(temp) ? `${temp}${\"\\u00b0\"}C` : `0${\"\\u00b0\"}C`;\n};\n\nconst pascalToMmHg = pascal => (pascal / 133.3224 * 100).toFixed();\n\nfunction WeatherWidget(props) {\n  _s();\n\n  const [weather, setWeather] = useState();\n  const [weatherIcon, setWeatherIcon] = useState(\"01d\");\n  const [wind, setWind] = useState();\n  const [humidity, setHumidity] = useState();\n  const [pressure, setPressure] = useState();\n  useEffect(() => {\n    fetch(\"http://api.openweathermap.org/data/2.5/weather?q=minsk&appid=489c6e3b9c228bd88ea6333b1a07dfef\").then(res => res.json()).then(data => {\n      const temperatureInCelsius = kelvinToCelsius(data.main.temp);\n      setWeatherIcon(data.weather[0].icon);\n      setWeather(temperatureInCelsius);\n      setWind(data.wind.speed);\n      setHumidity(data.main.humidity);\n      setPressure(data.main.pressure);\n    });\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"weather-widget\",\n    children: [/*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"weather-widget__cityName\",\n      children: \"Weather in Minsk\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"weather-widget__info\",\n      children: [/*#__PURE__*/_jsxDEV(\"span\", {\n        className: \"weather-widget__degree\",\n        children: weather\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n        src: `http://openweathermap.org/img/wn/${weatherIcon}@2x.png`,\n        alt: \"weatherIcon\",\n        className: \"weather-widget__icon\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"weather-widget__additional-info\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"weather-widget__additional-info-element\",\n        children: [/*#__PURE__*/_jsxDEV(\"img\", {\n          src: \"wind.svg\",\n          alt: \"wind\",\n          className: \"weather-widget__pictures\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 47,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          children: [wind, \" m/s\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 48,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"weather-widget__additional-info-element\",\n        children: [/*#__PURE__*/_jsxDEV(\"img\", {\n          src: \"droplets.svg\",\n          alt: \"droplets\",\n          className: \"weather-widget__pictures\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 51,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          children: [humidity, \" %\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 56,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"weather-widget__additional-info-element\",\n        children: [/*#__PURE__*/_jsxDEV(\"img\", {\n          src: \"pressure.svg\",\n          alt: \"pressure\",\n          className: \"weather-widget__pictures\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 59,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          children: [pascalToMmHg(pressure), \" mm\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 64,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 35,\n    columnNumber: 5\n  }, this);\n}\n\n_s(WeatherWidget, \"RXxBu7qFbi19+n6iP2gW3Mcmc9U=\");\n\n_c = WeatherWidget;\nexport default WeatherWidget;\n\nvar _c;\n\n$RefreshReg$(_c, \"WeatherWidget\");","map":{"version":3,"sources":["D:/курсы/RS/REACT/TREVEL_APP/travel-app/src/Components/weatherWidget/weatherWidget.js"],"names":["useEffect","useState","kelvinToCelsius","kelvin","temp","Math","trunc","abs","pascalToMmHg","pascal","toFixed","WeatherWidget","props","weather","setWeather","weatherIcon","setWeatherIcon","wind","setWind","humidity","setHumidity","pressure","setPressure","fetch","then","res","json","data","temperatureInCelsius","main","icon","speed"],"mappings":"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","sourcesContent":["import { useEffect, useState } from \"react\";\nimport \"./weatherWidget.css\";\n\nconst kelvinToCelsius = (kelvin) => {\n  const temp = Math.trunc(kelvin - 273.15);\n\n  return Math.abs(temp) ? `${temp}${\"\\u00b0\"}C` : `0${\"\\u00b0\"}C`;\n};\n\nconst pascalToMmHg = (pascal) => ((pascal / 133.3224) * 100).toFixed();\n\nfunction WeatherWidget(props) {\n  const [weather, setWeather] = useState();\n  const [weatherIcon, setWeatherIcon] = useState(\"01d\");\n  const [wind, setWind] = useState();\n  const [humidity, setHumidity] = useState();\n  const [pressure, setPressure] = useState();\n\n  useEffect(() => {\n    fetch(\n      \"http://api.openweathermap.org/data/2.5/weather?q=minsk&appid=489c6e3b9c228bd88ea6333b1a07dfef\"\n    )\n      .then((res) => res.json())\n      .then((data) => {\n        const temperatureInCelsius = kelvinToCelsius(data.main.temp);\n        setWeatherIcon(data.weather[0].icon);\n        setWeather(temperatureInCelsius);\n        setWind(data.wind.speed);\n        setHumidity(data.main.humidity);\n        setPressure(data.main.pressure);\n      });\n  }, []);\n\n  return (\n    <div className=\"weather-widget\">\n      <p className=\"weather-widget__cityName\">Weather in Minsk</p>\n      <div className=\"weather-widget__info\">\n        <span className=\"weather-widget__degree\">{weather}</span>\n        <img\n          src={`http://openweathermap.org/img/wn/${weatherIcon}@2x.png`}\n          alt=\"weatherIcon\"\n          className=\"weather-widget__icon\"\n        />\n      </div>\n      <div className=\"weather-widget__additional-info\">\n        <div className=\"weather-widget__additional-info-element\">\n          <img src=\"wind.svg\" alt=\"wind\" className=\"weather-widget__pictures\" />\n          <span>{wind} m/s</span>\n        </div>\n        <div className=\"weather-widget__additional-info-element\">\n          <img\n            src=\"droplets.svg\"\n            alt=\"droplets\"\n            className=\"weather-widget__pictures\"\n          />\n          <span>{humidity} %</span>\n        </div>\n        <div className=\"weather-widget__additional-info-element\">\n          <img\n            src=\"pressure.svg\"\n            alt=\"pressure\"\n            className=\"weather-widget__pictures\"\n          />\n          <span>{pascalToMmHg(pressure)} mm</span>\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default WeatherWidget;\n"]},"metadata":{},"sourceType":"module"}